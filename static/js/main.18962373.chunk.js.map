{"version":3,"sources":["components/AppButton.js","App.js","components/Search.js","components/SearchOptions.js","components/SearchResult.js","components/Playlist.js","components/PlaylistForm.js","assets/Spotify_Icon_RGB_White.png","components/ConnectButton.js","reportWebVitals.js","index.js"],"names":["AppButton","text","onClick","disabled","style","color","backgroundColor","padding","outline","borderRadius","border","cursor","margin","BASIC_AUTH","Buffer","from","process","toString","redirectUrl","global","userAuthUrl","encodeURIComponent","App","React","useState","spotifyToken","setSpotifyToken","searchTerm","setSearchTerm","searchFilter","setSearchFilter","searchResults","setSearchResults","searchSelection","setSearchSelection","playlist","setPlaylist","userToken","setUserToken","userId","setUserId","playlistName","setPlaylistName","playlistDesc","setPlaylistDesc","playlistPublic","setPlaylistPublic","open","setOpen","playlistSaveSuccess","setPlaylistSaveSuccess","modalStyle","position","top","left","transform","width","useMediaQuery","orientation","bgcolor","boxShadow","textAlign","getSpotifyToken","a","axios","method","url","headers","data","qs","stringify","res","useEffect","then","access_token","getRecommendations","id","tracks","params","hashParams","r","q","window","location","hash","substring","e","exec","decodeURIComponent","getHashParams","getUserId","useCallback","addTracksToPlaylist","playlistId","trackUris","JSON","console","log","className","link","onSearch","event","target","value","artists","items","handleSearchSelection","result","length","onClose","sx","playListName","handlePlaylistNameInput","handlePlaylistDescInput","trackUrisArray","forEach","track","push","uri","uris","savePlaylist","Search","search","searchStyle","borderColor","height","type","onChange","SearchOptions","name","checked","SearchResult","containerStyle","overflow","listStyle","listStyleType","borderBottom","slice","map","Playlist","images","src","alt","album","item","marginTop","PlaylistForm","props","labelStyle","display","inputStyle","htmlFor","ConnectButton","marginLeft","justifyContent","SpotifyIcon","paddingRight","textDecoration","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18962373.chunk.js","sourcesContent":["const AppButton = ({ text, onClick, disabled }) => {\n  const style = {\n    color: \"black\",\n    backgroundColor: \"#FFFFFF\",\n    padding: \"10px\",\n    outline: 0,\n    borderRadius: \"50px\",\n    border: \"none\",\n    cursor: \"pointer\",\n    margin: 10,\n  };\n\n  return (\n    <button style={style} onClick={onClick} disabled={disabled}>\n      {text}\n    </button>\n  );\n};\n\nexport default AppButton;","import './App.css';\nimport React from 'react';\nimport axios from 'axios';\nimport qs from 'qs';\n\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { useMediaQuery } from 'react-responsive'\n\nimport Search from './components/Search';\nimport SearchOptions from './components/SearchOptions';\nimport SearchResult from './components/SearchResult';\nimport Playlist from './components/Playlist';\nimport PlaylistForm from './components/PlaylistForm';\nimport ConnectButton from './components/ConnectButton';\nimport AppButton from './components/AppButton';\n\nconst SPOTIFY_API_AUTH = 'https://accounts.spotify.com/api/token';\nconst SPOTIFY_API_SEARCH = 'https://api.spotify.com/v1/search?q=';\nconst SPOTIFY_API_RECOMMENDATIONS = 'https://api.spotify.com/v1/recommendations?seed_'\nconst SPOTIFY_API_USER_AUTH = 'https://accounts.spotify.com/authorize';\nconst SPOTIFY_API_USER_PROFILE = 'https://api.spotify.com/v1/me';\nconst SPOTIFY_API_USER_PLAYLIST = 'https://api.spotify.com/v1/users/';\nconst SPOTIFY_API_USER_PLAYLIST_ADD = 'https://api.spotify.com/v1/playlists/';\nconst BASIC_AUTH = Buffer.from(\n  `${process.env.REACT_APP_SPOTIFY_CLIENT_ID}:${process.env.REACT_APP_SPOTIFY_CLIENT_SECRET}`\n).toString('base64');\nconst scope = 'playlist-modify-private playlist-modify-public';\n\nlet redirectUrl =   'location' in global && global['location']['host'] === 'localhost:3000'\n  ? process.env.REACT_APP_SPOTIFY_REDIRECT_DEV\n  : process.env.REACT_APP_SPOTIFY_REDIRECT_PROD;\n\nlet userAuthUrl = SPOTIFY_API_USER_AUTH;\nuserAuthUrl += '?response_type=token';\nuserAuthUrl += '&client_id=' + encodeURIComponent(process.env.REACT_APP_SPOTIFY_CLIENT_ID);\nuserAuthUrl += '&scope=' + encodeURIComponent(scope);\nuserAuthUrl += '&redirect_uri=' + encodeURIComponent(redirectUrl);\n\nconst App = () => {\n  const [spotifyToken, setSpotifyToken] = React.useState('');\n  const [searchTerm, setSearchTerm] = React.useState('');\n  const [searchFilter, setSearchFilter] = React.useState(\"artist\");\n  const [searchResults, setSearchResults] = React.useState([]);\n  const [searchSelection, setSearchSelection] = React.useState({});\n  const [playlist, setPlaylist] = React.useState([]);\n  const [userToken, setUserToken] = React.useState('');\n  const [userId, setUserId] = React.useState('');\n  const [playlistName, setPlaylistName] = React.useState('');\n  const [playlistDesc, setPlaylistDesc] = React.useState('');\n  const [playlistPublic, setPlaylistPublic] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [playlistSaveSuccess, setPlaylistSaveSuccess] = React.useState(false);\n  \n  const isPortrait = useMediaQuery({ orientation: 'portrait' });\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => {\n    setOpen(false);\n    setPlaylistSaveSuccess(false);\n  };\n\n  const modalStyle = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: isPortrait ? \"90%\" : \"50%\",\n    padding: '2%',\n    bgcolor: '#444',\n    borderRadius: '25px',\n    boxShadow: 12,\n    textAlign: \"center\"\n  };\n\n  const getSpotifyToken = async () => {\n    const res = await axios({\n      method: 'post',\n      url: SPOTIFY_API_AUTH,\n      headers: {\n        'Authorization': `Basic ${BASIC_AUTH}`,\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      data: qs.stringify({ 'grant_type': 'client_credentials' })\n    });\n    return res.data;\n  }\n\n  React.useEffect(() => {\n    if (spotifyToken === \"\") {\n      getSpotifyToken().then((data) => {\n        setSpotifyToken(data.access_token);\n      });\n    }\n  }, [spotifyToken]);\n\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n    if (searchTerm) {\n      axios({\n        method: 'get',\n        url: `${SPOTIFY_API_SEARCH}${searchTerm}&type=${searchFilter}`,\n        headers: {\n          'Accept': 'application/json', \n          'Authorization': `Bearer ${spotifyToken}`,\n          'Content-Type': 'application/json',\n        }\n      }).then((res) => {\n        if (res.data.artists) {\n          setSearchResults([...res.data.artists.items])\n        } else { \n          setSearchResults([...res.data.tracks.items]);\n        }\n      });\n    }\n  }\n\n  const handleSearchSelection = (result) => {\n    setSearchTerm(\"\");\n    getRecommendations(result.id);\n  }\n\n  const getRecommendations = (id) => {\n    axios({\n      method: 'get',\n      url: `${SPOTIFY_API_RECOMMENDATIONS}${searchFilter}s=${id}`,\n      headers: {\n        'Accept': 'application/json', \n        'Authorization': `Bearer ${spotifyToken}`,\n        'Content-Type': 'application/json',\n      }\n    }).then((res) => {\n      setPlaylist([...res.data.tracks]);\n    });\n  }\n\n  // Function modified from Spotify API example:\n  // https://github.com/spotify/web-api-auth-examples/blob/master/implicit_grant/public/index.html\n  const getHashParams = () => {\n    const hashParams = {};\n    const r = /([^&;=]+)=?([^&;]*)/g;\n    const q = window.location.hash.substring(1);\n    let e = r;\n\n    while ((e = r.exec(q)) !== null) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  let params = getHashParams();\n\n  React.useEffect(() => {\n    if (userToken === \"\") {\n      setUserToken(params.access_token);\n    }\n  }, [userToken, params.access_token]);\n\n  const getUserId = React.useCallback(async () => {\n    const res =await axios({\n      method: 'get',\n      url: `${SPOTIFY_API_USER_PROFILE}`,\n      headers: {\n        'Accept': 'application/json', \n        'Authorization': `Bearer ${userToken}`,\n        'Content-Type': 'application/json',\n      }\n    });\n    return res.data;\n    }, [userToken]);\n\n  React.useEffect(() => {\n    if (userId === \"\" && userToken) {\n      getUserId().then((data) => {\n        setUserId(data.id);\n      });\n    }\n  }, [userId, getUserId, userToken]);\n\n  const savePlaylist = (playlistName, playlistDesc, playlistPublic) => {\n    axios({\n      method: 'post',\n      url: `${SPOTIFY_API_USER_PLAYLIST}${userId}/playlists`,\n      headers: {\n        'Accept': 'application/json', \n        'Authorization': `Bearer ${userToken}`,\n        'Content-Type': 'application/json',\n      },\n      data: JSON.stringify({ \n        'name': playlistName,\n        'description': playlistDesc,\n        'public': playlistPublic,\n      })\n    }).then((res) => {\n      let playlistId = res.data.id;\n      let trackUrisArray = [];\n\n      playlist.forEach((track) => {\n        trackUrisArray.push(track.uri);\n      });\n\n      let trackUrisObj = {\n        uris: trackUrisArray,\n      }\n\n      addTracksToPlaylist(playlistId, trackUrisObj);\n    });\n  }\n\n  const addTracksToPlaylist = (playlistId, trackUris) => {\n    axios({\n      method: 'post',\n      url: `${SPOTIFY_API_USER_PLAYLIST_ADD}${playlistId}/tracks`,\n      headers: {\n        'Accept': 'application/json', \n        'Authorization': `Bearer ${userToken}`,\n        'Content-Type': 'application/json',\n      },\n      data: JSON.stringify(trackUris),\n    }).then((res) => {\n      console.log(res);\n      setPlaylistSaveSuccess(true);\n    });\n  }\n\n  const handlePlaylistNameInput = event => {\n    setPlaylistName(event.target.value);\n  }\n\n  const handlePlaylistDescInput = event => {\n    setPlaylistDesc(event.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <ConnectButton link={userAuthUrl} />\n\n      <h1>A Playlist, Please.</h1>\n\n      <p>Search for an artist or song to create a playlist of recommended tracks.</p>\n\n      <Search onSearch={handleSearch}/>\n      <SearchOptions \n        searchFilter={searchFilter} \n        setSearchFilter={setSearchFilter}\n      />\n\n      {searchTerm && searchResults ?\n        <SearchResult \n          searchResults={searchResults} \n          handleSearchSelection={handleSearchSelection}\n          searchSelection={searchSelection}\n          setSearchSelection={setSearchSelection}\n        />\n        :\n        null\n      }\n\n      <Playlist\n        playlist={playlist}\n        searchSelection={searchSelection}\n      />\n      <br/>\n\n    {playlist.length && userToken ?\n      <div>\n        <AppButton\n          text=\"Save Playlist\"\n          onClick={handleOpen}\n        />\n        <Modal\n          open={open}\n          onClose={handleClose}\n        >\n          <Box sx={modalStyle}>\n            {playlistSaveSuccess ?\n              <div>\n                Playlist saved successfully.\n              </div>\n              :\n              <div>\n                <PlaylistForm\n                  playListName={playlistName}\n                  playlistDesc={playlistDesc}\n                  playlistPublic={playlistPublic}\n                  setPlaylistPublic={setPlaylistPublic}\n                  handlePlaylistNameInput={handlePlaylistNameInput}\n                  handlePlaylistDescInput={handlePlaylistDescInput}\n                />\n\n                <AppButton\n                  text=\"Save Playlist\"\n                  onClick={() => savePlaylist(playlistName, playlistDesc, playlistPublic)}\n                />\n              </div>\n            }\n          </Box>\n        </Modal>\n      </div>\n      :\n      null\n    }\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { useMediaQuery } from 'react-responsive'\n\nconst Search = ({ search, onSearch }) => {\n  const isPortrait = useMediaQuery({ orientation: 'portrait' });\n\n  const searchStyle = {\n    border: \"none\",\n    borderColor: \"transparent\",\n    borderRadius: \"50px\",\n    outline: \"none\",\n    height: \"2em\",\n    width: isPortrait ? \"80%\" : \"50%\",\n    padding: \"0.2em 1.5em 0.2em 1.5em\",\n  };\n\n  return (\n    <div>\n      <input \n        style={searchStyle}\n        id=\"search\" \n        type=\"text\" \n        value={search} \n        onChange={onSearch} \n      />\n    </div>\n  )\n}\n\nexport default Search;","const SearchOptions = ({ searchFilter, setSearchFilter }) => {\n  const style = {\n    padding: \"1rem\",\n  }\n  \n  return (\n    <div style={style}>\n      <label style={style}>\n        Artist\n        <input\n          type=\"radio\"\n          name=\"searchType\"\n          value=\"artist\"\n          checked={searchFilter === \"artist\"}\n          onChange={event => setSearchFilter(event.target.value)}\n        />\n      </label>\n\n      <label style={style}>\n        Song\n        <input\n          type=\"radio\"\n          name=\"searchType\"\n          value=\"track\"\n          checked={searchFilter === \"track\"}\n          onChange={event => setSearchFilter(event.target.value)}\n        />\n      </label>\n    </div>\n  )\n}\n\nexport default SearchOptions;","import './SearchResult.css'\nimport { useMediaQuery } from 'react-responsive'\n\nconst SearchResult = ({ searchResults, handleSearchSelection, searchSelection, setSearchSelection }) => {\n  const isPortrait = useMediaQuery({ orientation: 'portrait' });\n  \n  const containerStyle = {\n    width: isPortrait ? \"80%\" : \"40%\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    margin: \"0 auto\",\n    borderRadius: \"20px\",\n    overflow: \"hidden\"\n  };\n  \n  const listStyle = {\n    listStyleType: \"none\",\n    textAlign: \"left\",\n    borderBottom: \"1px solid #CCCCCC\",\n    padding: \"1em\",\n  };\n\n  return (\n    <div style={containerStyle}>\n      {searchResults.length ? \n        <div>\n          {searchResults.slice(0,5).map((result) => (\n            <li\n              className=\"resultItem\"\n              style={listStyle}\n              key={result.id}\n              onClick={() => {\n                  handleSearchSelection(result);\n                  setSearchSelection(result);\n                }\n              }\n            >\n              {result.type === \"artist\" ?\n                <p>{result.name}</p>\n                :\n                <p>{result.name} - {result.artists[0].name}</p>\n              }\n            </li>\n          ))}\n        </div>\n        : \n        null\n      }\n    </div>\n  )\n}\n\nexport default SearchResult;","import { useMediaQuery } from 'react-responsive'\n\nconst Playlist = ({ playlist, searchSelection }) => {\n  const isPortrait = useMediaQuery({ orientation: 'portrait' });\n\n  const containerStyle = {\n    width: isPortrait ? \"80%\" : \"40%\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    margin: \"0 auto\",\n    borderRadius: \"20px\",\n    overflow: \"hidden\"\n  };\n  \n  const listStyle = {\n    listStyleType: \"none\",\n    textAlign: \"left\",\n    borderBottom: \"1px solid #CCCCCC\",\n    padding: \"1em\",\n  };\n\n  return (\n    <div>\n      {playlist.length ? \n        <div>\n          <h4>Here's a playlist based on: </h4>\n          {searchSelection.type === \"artist\" ? \n            <div>\n              {searchSelection.images[2] ? \n                <img src={searchSelection.images[2].url} alt=\"Artist profile\" />\n                :\n                null\n              }\n              <p>{searchSelection.name}</p>\n            </div>\n            :\n            <div>\n              {searchSelection.album.images[2] ?\n                <img src={searchSelection.album.images[2].url} alt=\"Song artwork\" />\n                :\n                null\n              }\n              <p>{searchSelection.name} - {searchSelection.artists[0].name}</p>\n            </div>\n          }\n          <div style={containerStyle}>\n            {playlist.map((item) => (\n              <li style={listStyle} key={item.id}>\n                {item.name} - {item.artists[0].name}\n              </li>\n            ))}\n          </div>\n        </div>\n        : \n        null\n      }\n      {!playlist.length && searchSelection.type ?\n        <div style={{marginTop: \"5%\"}}>\n          Sorry, there are no recommendations for this {searchSelection.type}.\n        </div>\n        :\n        null\n      }\n    </div>\n  )\n}\n\nexport default Playlist;","import { useMediaQuery } from 'react-responsive'\n\nconst PlaylistForm = (props) => {\n  const isPortrait = useMediaQuery({ orientation: 'portrait' });\n\n  const containerStyle = {\n    width: \"100%\",\n    margin: \"0 auto\",\n  }\n\n  const labelStyle = {\n    padding: \"0.5em\",\n    display: \"block\",\n  }\n  \n  const inputStyle = {\n    border: \"none\",\n    borderRadius: \"50px\",\n    outline: \"none\",\n    padding: \"0.8em\",\n    width: isPortrait ? \"80%\" : \"50%\",\n  }\n\n  const radioStyle = {\n    padding: \"1em\",\n  }\n\n  const radioLabelStyle = {\n    padding: \"0 0 0 1em\",\n  }\n\n  return (\n    <div style={containerStyle}>\n      <div style={labelStyle}>\n        <label style={labelStyle} htmlFor=\"search\">Playlist Name: </label>\n        <input \n          style={inputStyle}\n          id=\"playlistName\" \n          type=\"text\" \n          value={props.playListName} \n          onChange={props.handlePlaylistNameInput}\n        />\n      </div>\n      <div style={labelStyle}>\n        <label style={labelStyle} htmlFor=\"search\">Playlist Description: </label>\n        <input \n          style={inputStyle}\n          id=\"playlistDesc\" \n          type=\"text\" \n          value={props.playlistDesc} \n          onChange={props.handlePlaylistDescInput}\n        />\n      </div>\n      <div style={radioStyle}>\n        <label>\n          Public\n          <input\n            type=\"radio\"\n            name=\"playlistPublic\"\n            value=\"public\"\n            checked={props.playlistPublic}\n            onChange={event => props.setPlaylistPublic(event.target.value)}\n          />\n        </label>\n\n        <label style={radioLabelStyle}>\n          Private\n          <input\n            type=\"radio\"\n            name=\"playlistPublic\"\n            value=\"private\"\n            checked={!props.playlistPublic}\n            onChange={event => props.setPlaylistPublic(!event.target.value)}\n          />\n        </label>\n      </div>\n    </div>\n  )\n}\n\nexport default PlaylistForm;","export default __webpack_public_path__ + \"static/media/Spotify_Icon_RGB_White.ecd54051.png\";","import SpotifyIcon from '../assets/Spotify_Icon_RGB_White.png'\n\nconst ConnectButton = ({ link }) => {\n  const containerStyle = {\n    backgroundColor: \"#26D863\",\n    padding: \"10px\",\n    outline: 0,\n    borderRadius: \"50px\",\n    border: \"none\",\n    cursor: \"pointer\",\n    display: 'flex', \n    marginLeft: \"auto\",\n    width: \"11em\",\n    justifyContent: \"center\"\n  }\n\n  const iconStyle = {\n    height: \"21px\",\n    width: \"21px\",\n    paddingRight: \"0.5em\"\n  }\n\n  const style = {\n    color: \"#FFFFFF\",\n    textDecoration: \"none\",\n  };\n\n  return (\n    <div style={containerStyle}>\n      <img src={SpotifyIcon} alt=\"Spotify Icon\" style={iconStyle}/>\n      <a style={style} href={link}>\n        Connect to Spotify\n      </a>\n    </div>\n  );\n};\n\nexport default ConnectButton;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}