{"version":3,"sources":["components/AppButton.js","App.js","components/Search.js","components/SearchOptions.js","components/SearchResult.js","components/Playlist.js","components/PlaylistForm.js","assets/Spotify_Icon_RGB_White.png","components/ConnectButton.js","reportWebVitals.js","index.js"],"names":["AppButton","text","onClick","disabled","style","color","backgroundColor","padding","outline","borderRadius","border","cursor","margin","BASIC_AUTH","Buffer","from","process","toString","redirectUrl","global","userAuthUrl","encodeURIComponent","App","React","useState","spotifyToken","setSpotifyToken","searchTerm","setSearchTerm","searchFilter","setSearchFilter","searchResults","setSearchResults","searchSelection","setSearchSelection","playlist","setPlaylist","userToken","setUserToken","userId","setUserId","playlistName","setPlaylistName","playlistDesc","setPlaylistDesc","playlistPublic","setPlaylistPublic","open","setOpen","getSpotifyToken","a","axios","method","url","headers","data","qs","stringify","res","useEffect","then","access_token","getRecommendations","id","tracks","params","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","getHashParams","getUserId","useCallback","addTracksToPlaylist","playlistId","trackUris","JSON","console","log","className","link","onSearch","event","target","value","artists","items","handleSearchSelection","result","length","onClose","sx","position","top","left","transform","width","bgcolor","boxShadow","textAlign","playListName","handlePlaylistNameInput","handlePlaylistDescInput","trackUrisArray","forEach","track","push","uri","uris","savePlaylist","Search","search","borderColor","height","type","onChange","SearchOptions","name","checked","SearchResult","listStyle","listStyleType","borderBottom","overflow","slice","map","Playlist","src","images","alt","album","item","PlaylistForm","props","labelStyle","display","inputStyle","htmlFor","ConnectButton","marginLeft","justifyContent","SpotifyIcon","paddingRight","textDecoration","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5e137ad.chunk.js","sourcesContent":["const AppButton = ({ text, onClick, disabled }) => {\n  const style = {\n    color: \"black\",\n    backgroundColor: \"#FFFFFF\",\n    padding: \"10px\",\n    outline: 0,\n    borderRadius: \"50px\",\n    border: \"none\",\n    cursor: \"pointer\",\n    margin: 10,\n  };\n\n  return (\n    <button style={style} onClick={onClick} disabled={disabled}>\n      {text}\n    </button>\n  );\n};\n\nexport default AppButton;","import './App.css';\nimport React from 'react';\nimport axios from 'axios';\nimport qs from 'qs';\n\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\n\nimport Search from './components/Search';\nimport SearchOptions from './components/SearchOptions';\nimport SearchResult from './components/SearchResult';\nimport Playlist from './components/Playlist';\nimport PlaylistForm from './components/PlaylistForm';\nimport ConnectButton from './components/ConnectButton';\nimport AppButton from './components/AppButton';\n\nconst SPOTIFY_API_AUTH = 'https://accounts.spotify.com/api/token';\nconst SPOTIFY_API_SEARCH = 'https://api.spotify.com/v1/search?q=';\nconst SPOTIFY_API_RECOMMENDATIONS = 'https://api.spotify.com/v1/recommendations?seed_'\nconst SPOTIFY_API_USER_AUTH = 'https://accounts.spotify.com/authorize';\nconst SPOTIFY_API_USER_PROFILE = 'https://api.spotify.com/v1/me';\nconst SPOTIFY_API_USER_PLAYLIST = 'https://api.spotify.com/v1/users/';\nconst SPOTIFY_API_USER_PLAYLIST_ADD = 'https://api.spotify.com/v1/playlists/';\nconst BASIC_AUTH = Buffer.from(\n  `${process.env.REACT_APP_SPOTIFY_CLIENT_ID}:${process.env.REACT_APP_SPOTIFY_CLIENT_SECRET}`\n).toString('base64');\nconst scope = 'playlist-modify-private playlist-modify-public';\n\nlet redirectUrl =   'location' in global && global['location']['host'] === 'localhost:3000'\n  ? process.env.REACT_APP_SPOTIFY_REDIRECT_DEV\n  : process.env.REACT_APP_SPOTIFY_REDIRECT_PROD;\n\nlet userAuthUrl = SPOTIFY_API_USER_AUTH;\nuserAuthUrl += '?response_type=token';\nuserAuthUrl += '&client_id=' + encodeURIComponent(process.env.REACT_APP_SPOTIFY_CLIENT_ID);\nuserAuthUrl += '&scope=' + encodeURIComponent(scope);\nuserAuthUrl += '&redirect_uri=' + encodeURIComponent(redirectUrl);\n\nconst App = () => {\n  const [spotifyToken, setSpotifyToken] = React.useState('');\n  const [searchTerm, setSearchTerm] = React.useState('');\n  const [searchFilter, setSearchFilter] = React.useState(\"artist\");\n  const [searchResults, setSearchResults] = React.useState([]);\n  const [searchSelection, setSearchSelection] = React.useState({});\n  const [playlist, setPlaylist] = React.useState([]);\n  const [userToken, setUserToken] = React.useState('');\n  const [userId, setUserId] = React.useState('');\n  const [playlistName, setPlaylistName] = React.useState('');\n  const [playlistDesc, setPlaylistDesc] = React.useState('');\n  const [playlistPublic, setPlaylistPublic] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: '50%',\n    padding: '2%',\n    bgcolor: '#444',\n    borderRadius: '25px',\n    boxShadow: 12,\n    textAlign: \"center\"\n  };\n\n  const getSpotifyToken = async () => {\n    const res = await axios({\n      method: 'post',\n      url: SPOTIFY_API_AUTH,\n      headers: {\n        'Authorization': `Basic ${BASIC_AUTH}`,\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      data: qs.stringify({ 'grant_type': 'client_credentials' })\n    });\n    return res.data;\n  }\n\n  React.useEffect(() => {\n    if (spotifyToken === \"\") {\n      getSpotifyToken().then((data) => {\n        setSpotifyToken(data.access_token);\n      });\n    }\n  }, [spotifyToken]);\n\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n    if (searchTerm) {\n      axios({\n        method: 'get',\n        url: `${SPOTIFY_API_SEARCH}${searchTerm}&type=${searchFilter}`,\n        headers: {\n          'Accept': 'application/json', \n          'Authorization': `Bearer ${spotifyToken}`,\n          'Content-Type': 'application/json',\n        }\n      }).then((res) => {\n        if (res.data.artists) {\n          setSearchResults([...res.data.artists.items])\n        } else { \n          setSearchResults([...res.data.tracks.items]);\n        }\n      });\n    }\n  }\n\n  const handleSearchSelection = (result) => {\n    setSearchTerm(\"\");\n    getRecommendations(result.id);\n  }\n\n  const getRecommendations = (id) => {\n    axios({\n      method: 'get',\n      url: `${SPOTIFY_API_RECOMMENDATIONS}${searchFilter}s=${id}`,\n      headers: {\n        'Accept': 'application/json', \n        'Authorization': `Bearer ${spotifyToken}`,\n        'Content-Type': 'application/json',\n      }\n    }).then((res) => {\n      setPlaylist([...res.data.tracks]);\n    });\n  }\n\n  // Function taken from Spotify API example:\n  // https://github.com/spotify/web-api-auth-examples/blob/master/implicit_grant/public/index.html\n  const getHashParams = () => {\n    let hashParams = {};\n    let e, r = /([^&;=]+)=?([^&;]*)/g, q = window.location.hash.substring(1);\n    while (e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  let params = getHashParams();\n\n  React.useEffect(() => {\n    if (userToken === \"\") {\n      setUserToken(params.access_token);\n    }\n  }, [userToken, params.access_token]);\n\n  const getUserId = React.useCallback(async () => {\n    // const popup = window.open(userAuthUrl, 'Login with Spotify', 'width=800, height=600');\n    const res =await axios({\n      method: 'get',\n      url: `${SPOTIFY_API_USER_PROFILE}`,\n      headers: {\n        'Accept': 'application/json', \n        'Authorization': `Bearer ${userToken}`,\n        'Content-Type': 'application/json',\n      }\n    });\n    return res.data;\n    }, [userToken]);\n\n  React.useEffect(() => {\n    if (userId === \"\" && userToken) {\n      getUserId().then((data) => {\n        setUserId(data.id);\n      });\n    }\n  }, [userId, getUserId, userToken]);\n\n  const savePlaylist = (playlistName, playlistDesc, playlistPublic) => {\n    axios({\n      method: 'post',\n      url: `${SPOTIFY_API_USER_PLAYLIST}${userId}/playlists`,\n      headers: {\n        'Accept': 'application/json', \n        'Authorization': `Bearer ${userToken}`,\n        'Content-Type': 'application/json',\n      },\n      data: JSON.stringify({ \n        'name': playlistName,\n        'description': playlistDesc,\n        'public': playlistPublic,\n      })\n    }).then((res) => {\n      let playlistId = res.data.id;\n      let trackUrisArray = [];\n\n      playlist.forEach((track) => {\n        trackUrisArray.push(track.uri);\n      });\n\n      let trackUrisObj = {\n        uris: trackUrisArray,\n      }\n\n      addTracksToPlaylist(playlistId, trackUrisObj);\n    });\n  }\n\n  const addTracksToPlaylist = (playlistId, trackUris) => {\n    axios({\n      method: 'post',\n      url: `${SPOTIFY_API_USER_PLAYLIST_ADD}${playlistId}/tracks`,\n      headers: {\n        'Accept': 'application/json', \n        'Authorization': `Bearer ${userToken}`,\n        'Content-Type': 'application/json',\n      },\n      data: JSON.stringify(trackUris),\n    }).then((res) => {\n      console.log(res.data);\n    });\n  }\n\n  const handlePlaylistNameInput = event => {\n    setPlaylistName(event.target.value);\n  }\n\n  const handlePlaylistDescInput = event => {\n    setPlaylistDesc(event.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <ConnectButton link={userAuthUrl} />\n\n      <h1>A Playlist, Please.</h1>\n\n      <p>Search for an artist or song to create a playlist of recommended tracks.</p>\n\n      <Search onSearch={handleSearch}/>\n      <SearchOptions \n        searchFilter={searchFilter} \n        setSearchFilter={setSearchFilter}\n      />\n\n      {searchTerm && searchResults ?\n        <SearchResult \n          searchResults={searchResults} \n          handleSearchSelection={handleSearchSelection}\n          searchSelection={searchSelection}\n          setSearchSelection={setSearchSelection}\n        />\n        :\n        null\n      }\n\n      <Playlist\n        playlist={playlist}\n        searchSelection={searchSelection}\n      />\n      <br/>\n\n    {playlist.length && userToken ?\n      <div>\n        <AppButton\n          text=\"Save Playlist\"\n          onClick={handleOpen}\n        />\n        <Modal\n          open={open}\n          onClose={handleClose}\n        >\n          <Box sx={style}>\n            <PlaylistForm\n              playListName={playlistName}\n              playlistDesc={playlistDesc}\n              playlistPublic={playlistPublic}\n              setPlaylistPublic={setPlaylistPublic}\n              handlePlaylistNameInput={handlePlaylistNameInput}\n              handlePlaylistDescInput={handlePlaylistDescInput}\n            />\n\n            <AppButton\n              text=\"Save Playlist\"\n              onClick={() => savePlaylist(playlistName, playlistDesc, playlistPublic)}\n            />\n          </Box>\n        </Modal>\n      </div>\n      :\n      null\n    }\n      \n    </div>\n  );\n}\n\nexport default App;\n","const Search = ({ search, onSearch }) => {\n  const searchStyle = {\n    border: \"none\",\n    borderColor: \"transparent\",\n    borderRadius: \"50px\",\n    outline: \"none\",\n    height: \"2em\",\n    width: \"50%\",\n    padding: \"0.2em 1.5em 0.2em 1.5em\",\n  };\n\n  return (\n    <div>\n      <input \n        style={searchStyle}\n        id=\"search\" \n        type=\"text\" \n        value={search} \n        onChange={onSearch} \n      />\n    </div>\n  )\n}\n\nexport default Search;","const SearchOptions = ({ searchFilter, setSearchFilter }) => {\n  const style = {\n    padding: \"1rem\",\n  }\n  \n  return (\n    <div style={style}>\n      <label style={style}>\n        Artist\n        <input\n          type=\"radio\"\n          name=\"searchType\"\n          value=\"artist\"\n          checked={searchFilter === \"artist\"}\n          onChange={event => setSearchFilter(event.target.value)}\n        />\n      </label>\n\n      <label style={style}>\n        Song\n        <input\n          type=\"radio\"\n          name=\"searchType\"\n          value=\"track\"\n          checked={searchFilter === \"track\"}\n          onChange={event => setSearchFilter(event.target.value)}\n        />\n      </label>\n    </div>\n  )\n}\n\nexport default SearchOptions;","import './SearchResult.css'\n\nconst SearchResult = ({ searchResults, handleSearchSelection, searchSelection, setSearchSelection }) => {\n  const containerStyle = {\n    width: \"40%\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    margin: \"0 auto\",\n    borderRadius: \"20px\",\n    overflow: \"hidden\"\n  };\n  \n  const listStyle = {\n    listStyleType: \"none\",\n    textAlign: \"left\",\n    borderBottom: \"1px solid #CCCCCC\",\n    padding: \"1em\",\n  };\n\n  return (\n    <div style={containerStyle}>\n      {searchResults.length ? \n        <div>\n          {searchResults.slice(0,5).map((result) => (\n            <li\n              className=\"resultItem\"\n              style={listStyle}\n              key={result.id}\n              onClick={() => {\n                  handleSearchSelection(result);\n                  setSearchSelection(result);\n                }\n              }\n            >\n              {result.type === \"artist\" ?\n                <p>{result.name}</p>\n                :\n                <p>{result.name} - {result.artists[0].name}</p>\n              }\n            </li>\n          ))}\n        </div>\n        : \n        null\n      }\n    </div>\n  )\n}\n\nexport default SearchResult;","const Playlist = ({ playlist, searchSelection }) => {\n  const containerStyle = {\n    width: \"40%\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    margin: \"0 auto\",\n    borderRadius: \"20px\",\n    overflow: \"hidden\"\n  };\n  \n  const listStyle = {\n    listStyleType: \"none\",\n    textAlign: \"left\",\n    borderBottom: \"1px solid #CCCCCC\",\n    padding: \"1em\",\n  };\n\n  return (\n    <div>\n      {playlist.length ? \n        <div>\n          <h4>Here's a playlist based on: </h4>\n          {searchSelection.type === \"artist\" ? \n            <div>\n              <img src={searchSelection.images[2].url} alt=\"Artist profile\" />\n              <p>{searchSelection.name}</p>\n            </div>\n            :\n            <div>\n              <img src={searchSelection.album.images[2].url} alt=\"Song artwork\" />\n              <p>{searchSelection.name} - {searchSelection.artists[0].name}</p>\n            </div>\n          }\n          <div style={containerStyle}>\n            {playlist.map((item) => (\n              <li style={listStyle} key={item.id}>\n                {item.name} - {item.artists[0].name}\n              </li>\n            ))}\n          </div>\n        </div>\n        : \n        null\n      }\n    </div>\n  )\n}\n\nexport default Playlist;","const PlaylistForm = (props) => {\n  const containerStyle = {\n    width: \"100%\",\n    margin: \"0 auto\",\n  }\n\n  const labelStyle = {\n    padding: \"0.5em\",\n    display: \"block\",\n  }\n  \n  const inputStyle = {\n    border: \"none\",\n    borderRadius: \"50px\",\n    outline: \"none\",\n    padding: \"0.8em\",\n    width: \"50%\",\n  }\n\n  const radioStyle = {\n    padding: \"1em\",\n  }\n\n  const radioLabelStyle = {\n    padding: \"0 0 0 1em\",\n  }\n\n  return (\n    <div style={containerStyle}>\n      <div style={labelStyle}>\n        <label style={labelStyle} htmlFor=\"search\">Playlist Name: </label>\n        <input \n          style={inputStyle}\n          id=\"playlistName\" \n          type=\"text\" \n          value={props.playListName} \n          onChange={props.handlePlaylistNameInput}\n        />\n      </div>\n      <div style={labelStyle}>\n        <label style={labelStyle} htmlFor=\"search\">Playlist Description: </label>\n        <input \n          style={inputStyle}\n          id=\"playlistDesc\" \n          type=\"text\" \n          value={props.playlistDesc} \n          onChange={props.handlePlaylistDescInput}\n        />\n      </div>\n      <div style={radioStyle}>\n        <label>\n          Public\n          <input\n            type=\"radio\"\n            name=\"playlistPublic\"\n            value=\"public\"\n            checked={props.playlistPublic}\n            onChange={event => props.setPlaylistPublic(event.target.value)}\n          />\n        </label>\n\n        <label style={radioLabelStyle}>\n          Private\n          <input\n            type=\"radio\"\n            name=\"playlistPublic\"\n            value=\"private\"\n            checked={!props.playlistPublic}\n            onChange={event => props.setPlaylistPublic(!event.target.value)}\n          />\n        </label>\n      </div>\n    </div>\n  )\n}\n\nexport default PlaylistForm;","export default __webpack_public_path__ + \"static/media/Spotify_Icon_RGB_White.ecd54051.png\";","import SpotifyIcon from '../assets/Spotify_Icon_RGB_White.png'\n\nconst ConnectButton = ({ link }) => {\n  const containerStyle = {\n    backgroundColor: \"#26D863\",\n    padding: \"10px\",\n    outline: 0,\n    borderRadius: \"50px\",\n    border: \"none\",\n    cursor: \"pointer\",\n    display: 'flex', \n    marginLeft: \"auto\",\n    width: \"11em\",\n    justifyContent: \"center\"\n  }\n\n  const iconStyle = {\n    height: \"21px\",\n    width: \"21px\",\n    paddingRight: \"0.5em\"\n  }\n\n  const style = {\n    color: \"#FFFFFF\",\n    textDecoration: \"none\",\n  };\n\n  return (\n    <div style={containerStyle}>\n      <img src={SpotifyIcon} alt=\"Spotify Icon\" style={iconStyle}/>\n      <a style={style} href={link}>\n        Connect to Spotify\n      </a>\n    </div>\n  );\n};\n\nexport default ConnectButton;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}